{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAW,CACfC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRC,SAAU,GAgCZ,SAASC,EAAcD,EAAUH,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAetC,OAdgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACT,MAAMC,EAAS,C,SACbT,E,MACAH,GAGEK,EACFI,EAAQG,GAERF,EAAOE,EAAO,GAEfZ,EAAM,G,CA3CbJ,EAAKiB,iBAAiB,SAEtB,SAAcC,GACZf,EAASe,EAAIC,OAAOC,MAAQC,OAAOH,EAAIC,OAAOG,OAC9CC,QAAQC,IAAIrB,E,IAGdH,EAAKiB,iBAAiB,UAItB,SAAeC,GACbA,EAAIO,iBACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAASG,OAAQoB,GAAK,EACxClB,EAAcL,EAASI,SAAUJ,EAASC,OACvCuB,MAAK,EAACpB,SAAEA,EAAQH,MAAEA,MACjBwB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBvB,QAAiBH,MAAU,IAGnD2B,OAAM,EAACxB,SAAEA,EAAQH,MAAEA,MAClBwB,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoBzB,QAAiBH,MAAU,IAGrDD,EAASC,OAASD,EAASE,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nconst inputObj = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n  position: 0,\n};\n\nform.addEventListener('input', call);\n\nfunction call(evt) {\n  inputObj[evt.target.name] = Number(evt.target.value);\n  console.log(inputObj);\n}\n\nform.addEventListener('submit', start);\n\n\n\nfunction start(evt) {\n  evt.preventDefault();\n  for (let i = 0; i < inputObj.amount; i += 1) {\n    createPromise(inputObj.position, inputObj.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    inputObj.delay += inputObj.step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = {\n        position,\n        delay,\n      };\n\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n\n\n/*promise.then(({ position, delay }) => { \n    setTimeout(() => { \n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }, delay)\n  })\n    .catch(({ position, delay }) => { \n      setTimeout(() => { \n           Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay)\n\n    })*/\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputObj","delay","step","amount","position","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","result","addEventListener","evt","target","name","Number","value","console","log","preventDefault","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7fd068ac.js.map"}